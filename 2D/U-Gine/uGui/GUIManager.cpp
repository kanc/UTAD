#include "GUIManager.h"
#include "Control.h"
#include "Window.h"
#include <assert.h>
#include "../include/Screen.h"

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
int GUIManager::init()
{
	m_rootControl = NULL;

	// crea ventana de Desktop por defecto
	Window* desktop = new Window();
	desktop->init( "desktop" );
	m_rootControl = desktop;

	return 0;
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::end()
{
	if( m_rootControl )
		deleteControl( m_rootControl->getName() );
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::render()
{
	m_rootControl->processRender();
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::update()
{
	m_rootControl->processUpdate();
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::setRootControl( Control* control )
{
	m_rootControl = control;
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
Control* GUIManager::getRootControl()
{
	return m_rootControl;
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::injectInput( const Message& message )
{
	if( m_rootControl )
		m_rootControl->injectInput( message );
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
Vector2 GUIManager::getScreenSize() const
{
	return Vector2( (float)Screen::Instance().GetWidth(), (float)Screen::Instance().GetWidth() );
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
Control* GUIManager::findControlByName( const string& name )
{
	if( m_rootControl )
		return m_rootControl->findControlByName( name );

	return NULL;
}

//------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------
void GUIManager::deleteControl( const string& name )
{
	Control* control = findControlByName( name );
	if( control )
	{
		Control* parent = control->m_parent;
		control->processDestroy();
		if( parent )
			parent->removeControl( control );
	}
}
